[ { "title" : "UDP Server for KUKA RSI - Python Server with GUI for Axis Jogging from Master Computer | ROS Connectivity to KUKA Robot via Robot Sensor Interface" ,"category" : "jekyll" ,"tags" : "robotics, industrial automation, example post" ,"url" : "/kukaserver.html" ,"date" : "Feb 2, 2023" ,"content" : "KUKA Robot controller has inbuilt Ethernet port called KLI (KUKA LINE INTERFACE, Static IP) which is used for UDP/TCP IP connections from external system. Real Time Axis/Cartesian Position corrections (Delta) can be achieved via KUKA Optional Technology Package called RSI.(Robot Sensor Interface) Now, Here RSI installed on Controller will behave as UDP Client and External Computer/System should be Server. Step 1: Use RSIVisual (Graphical XML/RSI Editor) supplied by KUKA to generate .XML and .RSI files. Step 2: Copy all these (.RSI, .Diagram, .XML, Config.XML) files inside KUKA Controller under path: C:/KRC/Roboter/Config/User/Common/SensorInterface Step 3: Start ServerApp.py on External Computer. (ServerApp.py Attached) Step 4: Run RSI_Ethernet.src file on KUKA Controller. (This src is supplied by KUKA RSI — Example Folder) Step 5: Post Connection is established with Controller, Run GUI.py to Control Axis 1 to Axis 6 in Real Time. Enjoy! Thanks. Project Source Code - https://github.com/pawankumardev/kukarsiserver Source 1: Example Code to demonstrate working principle of KUKA RSI IPOC Reflection using PY: # if the customer is creating his own server with someother software then python then provide him the Port no of the Cotroller which will # be coming on \"socket_of_krc\" line no 38 import socket UDP_IP = \"192.168.1.100\" # ip address of your computer UDP_PORT = 59152 #port enabled in KRC NAT port configuration sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) # Create a UDP socket sock.bind((UDP_IP, UDP_PORT)) xml_file = open(\"rsi.xml\", \"r\") #the rsi.xml files contains the data that is to be send default_command = xml_file.read() # The function below is used to reflect the IPOC value received from the controller data. if the IPOC does not reply for the given timeout set in Ethernet #block of the kuka RSIX file the controller shows an error of RSI bad Timeout. def mirroripoc(received_data, data_to_send): ipoc_begin_index = int (received_data.index(\"&lt;IPOC&gt;\")) ipoc_end_index = int(received_data.index(\"&lt;/IPOC&gt;\")) received_ipoc = int (received_data[ipoc_begin_index + 6: ipoc_end_index]) old_ipoc_begin_index = data_to_send.index(\"&lt;IPOC&gt;\") old_ipoc_end_index = data_to_send.index(\"&lt;/IPOC&gt;\") old_ipoc = data_to_send[old_ipoc_begin_index + 6: old_ipoc_end_index] oldipocrsi = f\"&lt;IPOC&gt;{old_ipoc}&lt;/IPOC&gt;\" newipocrsi = f\"&lt;IPOC&gt;{received_ipoc}&lt;/IPOC&gt;\" return data_to_send.replace(oldipocrsi,newipocrsi) while True: received_data, socket_of_krc = sock.recvfrom(1024) # buffer size is 1024 bytes received_data = received_data.decode('utf-8') data_to_send = default_command data_to_send = mirroripoc(received_data, data_to_send) bytesToSend = str.encode(data_to_send) sock.sendto(bytesToSend, socket_of_krc) xml_file.close() Source 2: Server with GUI for RSI Jogging of KUKA Robot: ServerApp.py : Connects to KUKA Controller. Read Write ActualPos.xml import socket import os import time; from bs4 import BeautifulSoup import xml.etree.cElementTree as ET import sys localIP = \"192.168.100.111\" ## Address of your Computer -- Same must be entered in RSI Config File localPort = 9508 ## Port on your computer bufferSize = 1024 ## No need to change # Create a datagram socket UDPServerSocket = socket.socket(family=socket.AF_INET, type=socket.SOCK_DGRAM) # Bind to address and ip UDPServerSocket.bind((localIP, localPort)) print(\"UDP server up and listening for KUKA RSI ! - Set your Server Computer IP to 192.168.100.111 , Port : 9508 \") # Listen for incoming datagrams while(True): bytesAddressPair = UDPServerSocket.recvfrom(bufferSize) message = bytesAddressPair[0] address = bytesAddressPair[1] clientMsg = format(message) clientIP = \"Client IP Address:{}\".format(address) #print(clientMsg) receivedData = BeautifulSoup(message, 'html.parser') #print(receivedData) axis1_act = receivedData.a1.get_text() axis2_act = receivedData.a2.get_text() axis3_act = receivedData.a3.get_text() axis4_act = receivedData.a4.get_text() axis5_act = receivedData.a5.get_text() axis6_act = receivedData.a6.get_text() ## Write to XML Actual Position root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = axis1_act ET.SubElement(root, \"Axis2\").text = axis2_act ET.SubElement(root, \"Axis3\").text = axis3_act ET.SubElement(root, \"Axis4\").text = axis4_act ET.SubElement(root, \"Axis5\").text = axis5_act ET.SubElement(root, \"Axis6\").text = axis6_act tree = ET.ElementTree(root) tree.write(\"actualpos.xml\") ##Corrections Read from XML axiscorr and apply the same tree1 = ET.parse('axiscorr.xml') axis1_corr = tree1.find('Axis1').text axis2_corr = tree1.find('Axis2').text axis3_corr = tree1.find('Axis3').text axis4_corr = tree1.find('Axis4').text axis5_corr = tree1.find('Axis5').text axis6_corr = tree1.find('Axis6').text direction = tree1.find('Direction').text if(direction==\"0\"): axis1_corr = \"-\"+axis1_corr axis2_corr = \"-\"+axis2_corr axis3_corr = \"-\"+axis3_corr axis4_corr = \"-\"+axis4_corr axis5_corr = \"-\"+axis5_corr axis6_corr = \"-\"+axis6_corr ## Correction ##Sending XML to RSI Client reflectIPOC = '&lt;Sen Type=\"ImFree\"&gt;&lt;EStr&gt;Message from RSI Control Server - PPG !&lt;/EStr&gt;&lt;AxisCorr A1=\"'+axis1_corr+'\" A2=\"'+axis2_corr+'\" A3=\"'+axis3_corr+'\" A4=\"'+axis4_corr+'\" A5=\"'+axis5_corr+'\" A6=\"'+axis6_corr+'\"&gt;&lt;RKorr X=\"0.00001\" Y=\"0.0000\" Z=\"0.0000\" A=\"0.0000\" B=\"0.0000\" C=\"0.0000\" /&gt;&lt;IPOC&gt;'+receivedData.ipoc.getText()+'&lt;/IPOC&gt;&lt;/Sen&gt;\\n' print(\"Commandin with &lt;IPOC&gt;:\"+receivedData.ipoc.getText()+\", Axis Actual Pos: \" + (axis1_act+\",\"+axis2_act+\",\"+axis3_act+\",\"+axis4_act+\",\"+axis5_act+\",\"+axis6_act)) bytesToSend = str.encode(reflectIPOC) UDPServerSocket.sendto(bytesToSend, address) GUI.py - Writes Corrections to AxisCorr.xml from tkinter import * import xml.etree.cElementTree as ET window = Tk() window.title(\"PawankumarG.com/KUKARSIServer\") window.geometry('600x600') delta = \"0.01\" # Jogging speed axis1 = Label(window, text=\"Axis 1\") axis2 = Label(window, text=\"Axis 2\") axis3 = Label(window, text=\"Axis 3\") axis4 = Label(window, text=\"Axis 4\") axis5 = Label(window, text=\"Axis 5\") axis6 = Label(window, text=\"Axis 6\") axis1.grid(column=0, row=0) axis2.grid(column=0, row=1) axis3.grid(column=0, row=2) axis4.grid(column=0, row=3) axis5.grid(column=0, row=4) axis6.grid(column=0, row=5) def clicked1p(): print(\"axis 1 plus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = delta ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"1\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked2p(): print(\"axis 2 plus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = delta ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"1\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked3p(): print(\"axis 3 plus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = delta ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"1\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked4p(): print(\"axis 4 plus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = delta ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"1\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked5p(): print(\"axis 5 plus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = delta ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"1\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked6p(): print(\"axis 6 plus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = delta ET.SubElement(root, \"Direction\").text = \"1\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") ### def clicked1n(): print(\"axis 1 minus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = delta ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"0\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked2n(): print(\"axis 2 minus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = delta ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"0\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked3n(): print(\"axis 3 minus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = delta ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"0\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked4n(): print(\"axis 4 minus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = delta ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"0\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked5n(): print(\"axis 5 minus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = delta ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"0\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def clicked6n(): print(\"axis 6 minus\") delta = txtfld.get() root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"0\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") def ClickstartRobot(): print(\"Stoping Robot\") root = ET.Element(\"root\") ET.SubElement(root, \"Axis1\").text = \"0.0\" ET.SubElement(root, \"Axis2\").text = \"0.0\" ET.SubElement(root, \"Axis3\").text = \"0.0\" ET.SubElement(root, \"Axis4\").text = \"0.0\" ET.SubElement(root, \"Axis5\").text = \"0.0\" ET.SubElement(root, \"Axis6\").text = \"0.0\" ET.SubElement(root, \"Direction\").text = \"0\" tree = ET.ElementTree(root) tree.write(\"axiscorr.xml\") startRobot = Button(window, text=\"Stop Robot Movement\", command=ClickstartRobot) inc = Label(window, text=\"Stop Robot Movement\") axis1p = Button(window, text=\"Positive\", command=clicked1p) axis2p = Button(window, text=\"Positive\", command=clicked2p) axis3p = Button(window, text=\"Positive\", command=clicked3p) axis4p = Button(window, text=\"Positive\", command=clicked4p) axis5p = Button(window, text=\"Positive\", command=clicked5p) axis6p = Button(window, text=\"Positive\", command=clicked6p) axis1n = Button(window, text=\"Negative\", command=clicked1n) axis2n = Button(window, text=\"Negative\", command=clicked2n) axis3n = Button(window, text=\"Negative\", command=clicked3n) axis4n = Button(window, text=\"Negative\", command=clicked4n) axis5n = Button(window, text=\"Negative\", command=clicked5n) axis6n = Button(window, text=\"Negative\", command=clicked6n) txtfld=Entry(window, text=\"This is Entry Widget\", bd=5) txtfld.insert(END, '0.001') startRobot.grid(column=5, row=3) txtfld.grid(column=6, row=3) axis1p.grid(column=1, row=0) axis2p.grid(column=1, row=1) axis3p.grid(column=1, row=2) axis4p.grid(column=1, row=3) axis5p.grid(column=1, row=4) axis6p.grid(column=1, row=5) axis1n.grid(column=2, row=0) axis2n.grid(column=2, row=1) axis3n.grid(column=2, row=2) axis4n.grid(column=2, row=3) axis5n.grid(column=2, row=4) axis6n.grid(column=2, row=5) window.mainloop() Q&amp;A RSI (Robot Sensor Interface) is an KUKA Optional package (Add-on on KUKA Software) which has following functions: KUKA Controller is connected to your Computer (ROS is here) with Ethernet LAN Cable. As we know ROS needs to send and receive axis position in Real Time. RSI installation enables Real Time connection between KUKA Controller and Computer with data transfer rate at 4 ms. RSI enable Soft Real Time i.e. 4 ms of data polling from ROS. Without RSI 4 ms data rate is NOT possible, as System Software has 12ms of Interpolation Time. RSI enable UDP data exchange with handshaking, Real Time Cartesian and Joint motion Correction. RSI Visual Shell allows you to create RSI Objects in Graphical Interface which is finally exported to XML files. Refer link to know how RSI interface is going to help for ROS: https://bit.ly/kukarsi KRL files are programs on KUKA Controller (On SmartHMI), mandatory to Start during initializing robot motion. Once KRL (KUKA Roboter Language) program started on controller then ROS can command robot for motion control. Point no. 2 is mandatory due to safety reasons. (BCO Run, Field Safety). KRL file create Ethernet node on KUKA Side where external ROS node will connect. KUKA RSI-Ethernet is always Client, External ROS will be Server. On running KRL file we are creating client socket on KUKA side and ROS will be Server." },{ "title" : "Mr. Green Jekyll Theme" ,"category" : "jekyll" ,"tags" : "jekyll, new feature" ,"url" : "/mr-green-jekyll-theme.html" ,"date" : "Mar 3, 2022" ,"content" : "Click here for live demo Introduction Mr. Green is a multilingual theme generated with Jekyll and fully compatible with GitHub Pages. I was going to make my website and thought if I did it as a template, I could share it with the open source community. That’s why I decided to build it as a theme. I’ve worked so hard to make this possible so I’m happy if you consider supporting me. Thanks. Features Multilingual web site English (default), Japanese, Brazilian Portuguese Recommended language offer feature Auto Navigation Button adder with icon enable disable options Layouts for Home, About, Archives, Post-list, Links, Projects and more Color scheme switching options (Dark light) Auto Contact option adder Auto image referrer (no need to add full path for images. Just add : in front of it.) image lazy loader, image viewer Cool Footer with creative commons licensing Movable Table of Contents modal box for Posts Post Share Options Post-listing by Category or Tags Comments for posts Disqus Selectable numbered pagination or scroll to load type Sitemap feature Search Engine Optimization (SEO) Schema Markup Open Graph Twitter Analytics (Google Analytics) Cookie consent feature Site Search feature Code Compression for small footprint (HTML JS SCSS) Mobile App support Mobile device friendly (Tested on Android and IOS) Well organized folder structure for developers (Tested on Chrome, Safari, FireFox) Installation Github pages Fork the repo. Edit _config.yml and change url like below and push changes. url: \"https://your_github_user_name.github.io\" Rename the repo name to your_github_user_name.github.io Check Deploy status Actions tab on the repo. When it’s turned to green, your site is up and running at https://your_github_user_name.github.io Local build Install Jekyll to your OS Clone or download the repo, in command prompt go to the folder run bundle install command Build using bundle exec jekyll serve --watch --host 0.0.0.0 --safe command with --host 0.0.0.0 parameter you can access web server from same lan. with --safe parameter you can make sure no 3rd party plugin added. (for Github pages development) Your page will be up and running at the 0.0.0.0:4000/ address. Documentation Check out Mr. Green theme tutorials playlist on YouTube Credits I want to thank these projects that gave me an opportunity to build my web site. Jekyll is a static site generator. It takes text written in your favorite markup language and uses layouts to create a static website. You can tweak the site’s look and feel, URLs, the data displayed on the page, and more. It is a wonderful project which is maintained by volunteers. GitHub Pages Hosted directly from your GitHub repository. Just push the changes and the site will be automatically generated. Some of the sites that I find useful while I’m working on this project. links page You Can Support My Work Creating projects starting from nothing takes a great amount of time. Much appreciated if you consider supporting me so that I can continue projects like this and creating new contents for everyone. You can support me on GitHub Sponsors (monthly or one time) You can be one of my patrons on Patreon (monthly) You can tip me via Ko-fi (one time) Contribute Pull Requests are welcome. Please check the instructions in the Issues and Pull Request templates. Contributors Thank you for your contributions! Brazilian Portuguese translation by Vitor DallAcqua. License As it says in the MIT license, you can use this theme anywhere as long as you include the license and copyright notice. Copyright (c) 2022 Mr. Green's Workshop https://www.MrGreensWorkshop.com Please add link to my page or leave the “Pwrd by Mr. Green” link in the footer so I can get credit for my work. Thank you! Other Licenses Mr. Green Jekyll Theme incorporates libraries written below. Without these libraries, I couldn’t make this project possible. Library file jQuery v3.6.0, Copyright OpenJS Foundation and other contributors. jQuery is distributed under the terms of the MIT License. jquery-3.6.0.min.js Bootstrap v3.3.7, Copyright (c) 2011-2016 Twitter, Inc. Bootstrap is distributed under the terms of the MIT License. bootstrap.min.js, bootstrap.min.css Bootstrap Table of Contents v0.4.1, Copyright (c) 2015 Aidan Feldman Aidan Feldman. Bootstrap Table of Contents is distributed under the terms of the MIT License. bootstrap-toc.min.js, bootstrap-toc.min.css Font Awesome v4.7.0, Copyright (c) 2017 Dave Gandy. The Font Awesome font is distributed under the terms of the SIL OFL 1.1. Font Awesome CSS, LESS, and Sass files are distributed under the terms of the MIT License. font-awesome.min.css, FontAwesome Lozad.js v1.16.0, Copyright (c) 2017 Apoorv Saxena. Lozad.js is distributed under the terms of the MIT License. lozad.min.js Magnific Popup v1.1.0, Copyright (c) 2014-2016 Dmitry Semenov, http://dimsemenov.com. Magnific Popup is distributed under the terms of the MIT License. jquery.magnific-popup.min.js, magnific-popup.css Simple-Jekyll-Search v1.9.2, Copyright (c) 2015 Christian Fei. Simple-Jekyll-Search is distributed under the terms of the MIT License. simple-jekyll-search-1.9.2.min.js Compress HTML in Jekyll v3.1.0, Copyright (c) 2014 Anatol Broder. Compress HTML in Jekyll is distributed under the terms of the MIT License. compress.liquid Mr. Green Jekyll Theme" },{ "title" : "Examples" ,"category" : "jekyll" ,"tags" : "jekyll, sample, example post" ,"url" : "/Examples.html" ,"date" : "Feb 10, 2022" ,"content" : "This is an example page to display markdown related styles for Mr. Green Jekyll Theme. Headings (centered) Heading 1 Heading 2 Heading 3 Heading 4 Heading 5 Heading 6 Paragraphs Paragraph William Shakespeare, Let me not to the marriage of true minds Admit impediments. Love is not love Which alters when it alteration finds, Or bends with the remover to remove. O no, it is an ever-fixed mark That looks on tempests and is never shaken; It is the star to every wand’ring barque, Whose worth’s unknown, although his height be taken. Love’s not Time’s fool, though rosy lips and cheeks Within his bending sickle’s compass come; Love alters not with his brief hours and weeks, But bears it out even to the edge of doom. If this be error and upon me proved, I never writ, nor no man ever loved. Texts Quoted text Hello world Bold text Hello world Italic text Hello world kbd text Hello world Blockquote William Shakespeare, Let me not to the marriage of true minds Admit impediments. Love is not love Which alters when it alteration finds, Or bends with the remover to remove. O no, it is an ever-fixed mark That looks on tempests and is never shaken; It is the star to every wand’ring barque, Whose worth’s unknown, although his height be taken. Love’s not Time’s fool, though rosy lips and cheeks Within his bending sickle’s compass come; Love alters not with his brief hours and weeks, But bears it out even to the edge of doom. If this be error and upon me proved, I never writ, nor no man ever loved. Link This is Mr. Green Jekyll Theme, a simple theme built for Jekyll. * Hello world! This is Pawankumar Gurav Picture Picture (centered) Lists Apple Banana Orange Fruits Apples Granny Smith Mutsu Bananas Cavendish Red Vegetables Tables Small Table (centered) Fruits(not aligned) Alignment (centered) num (right align) Apple centered 9999 Banana centered long text 999 Orange centered 99 Lemon centered 9 Wide Table (centered) scroll enabled when page is narrow Fruits num (left align) num (right align) num num num Apple 1111 1111 2222 3333 4444 Banana 111 111 222 333 444 Orange 11 11 22 33 44 Lemon 1 1 2 3 4 Wider Table scroll enabled when page is narrow Fruits num (left align) num (right align) num num num num num num Apple 1111 1111 2222 3333 4444 5555 6666 7777 Banana 111 111 222 333 444 555 666 777 Orange 11 11 22 33 44 55 66 77 Lemon 1 1 2 3 4 5 6 7 Code Highlight for i in range(5, 10): print(i) Quote for i in range(5, 10): print(i)" },{ "title" : "Welcome to Jekyll!" ,"category" : "jekyll" ,"tags" : "jekyll, example post, sample, test" ,"url" : "/welcome-to-jekyll.html" ,"date" : "Jan 1, 2022" ,"content" : "You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated. To add new posts, simply add a file in the _posts directory that follows the convention YYYY-MM-DD-name-of-post.ext and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works. Jekyll also offers powerful support for code snippets: def print_hi(name) puts \"Hi, #{name}\" end print_hi('Tom') #=&gt; prints 'Hi, Tom' to STDOUT. Check out the Jekyll docs for more info on how to get the most out of Jekyll. File all bugs/feature requests at Jekyll’s GitHub repo. If you have questions, you can ask them on Jekyll Talk." },{ "title" : "Sample" ,"category" : "auto generated" ,"tags" : "jekyll, sample" ,"url" : "/Test-page6.html" ,"date" : "Oct 15, 2021" ,"content" : "Hello Sample Sample Sample Sample Sample" },{ "title" : "Sample" ,"category" : "auto generated" ,"tags" : "jekyll, test" ,"url" : "/Test-page5.html" ,"date" : "Oct 14, 2021" ,"content" : "Hello Sample Sample Sample Sample Sample" },{ "title" : "Sample" ,"category" : "auto generated" ,"tags" : "jekyll, example post" ,"url" : "/Test-page4.html" ,"date" : "Sep 13, 2021" ,"content" : "Hello Sample Sample Sample Sample Sample" },{ "title" : "Sample" ,"category" : "auto generated" ,"tags" : "jekyll, sample" ,"url" : "/Test-page3.html" ,"date" : "Sep 12, 2021" ,"content" : "Hello Sample Sample Sample Sample Sample" },{ "title" : "Sample" ,"category" : "auto generated" ,"tags" : "jekyll, test" ,"url" : "/Test-page2.html" ,"date" : "Aug 11, 2021" ,"content" : "Hello Sample Sample Sample Sample Sample" },{ "title" : "Sample" ,"category" : "auto generated" ,"tags" : "jekyll, example post" ,"url" : "/Test-page1.html" ,"date" : "Aug 10, 2021" ,"content" : "Hello Sample Sample Sample Sample Sample" },{ "title" : "Projects" ,"category" : "" ,"tags" : "" ,"url" : "/tabs/projects.html" ,"date" : "Mar 11, 2023" ,"content" : "main header Projects info Your Project page description. text_color white img :projects-heading.jpg back_color lightblue category title Example type id_example color gray title Picture type id_picture color #62b462 title Quote type id_quote color #2FD0ED list type id_example project_name Example Project project_excerpt Examples img :project1_thumb.jpg img_title img title1 date 2021-03-13 post # Examples This is an example page to display markdown related styles for Mr. Green Jekyll Theme. ### Headings (centered) :data-align=\\ center\\ # Heading 1 ## Heading 2 ### Heading 3 #### Heading 4 ##### Heading 5 ###### Heading 6 *** ### Paragraphs #### Paragraph **William Shakespeare** Let me not to the marriage of true minds Admit impediments. Love is not love Which alters when it alteration finds Or bends with the remover to remove. O no it is an ever-fixed mark That looks on tempests and is never shaken; It is the star to every wand'ring barque Whose worth's unknown although his height be taken. Love's not Time's fool though rosy lips and cheeks Within his bending sickle's compass come; Love alters not with his brief hours and weeks But bears it out even to the edge of doom. If this be error and upon me proved I never writ nor no man ever loved. #### Texts Quoted text `Hello world` Bold text **Hello world** Italic text _Hello world_ kbd text <kbd>Hello world</kbd> #### Blockquote > **William Shakespeare** Let me not to the marriage of true minds Admit impediments. Love is not love Which alters when it alteration finds Or bends with the remover to remove. O no it is an ever-fixed mark That looks on tempests and is never shaken; It is the star to every wand'ring barque Whose worth's unknown although his height be taken. Love's not Time's fool though rosy lips and cheeks Within his bending sickle's compass come; Love alters not with his brief hours and weeks But bears it out even to the edge of doom. If this be error and upon me proved I never writ nor no man ever loved. ### Link This is Mr. Green Jekyll Theme(https://github.com/MrGreensWorkshop/MrGreen-JekyllTheme) a simple theme built for Jekyll(https://jekyllrb.com/). ### Picture !such a lovely place(:projects-heading.jpg) ### Picture (centered) !such a lovely place(:project1_thumb.jpg):data-align=\\ center\\ ### Lists - Apple - Banana - Orange 1. Fruits 1. Apples - Granny Smith - Mutsu 1. Bananas - Cavendish - Red 1. Vegetables *** ### Tables #### Small Table (centered) | Fruits(not aligned) | Alignment (centered) | num (right align) | | ------------------- | :------------------: | ----------------: | | Apple | centered | 9999 | | Banana | centered long text | 999 | | Orange | centered | 99 | | Lemon | centered | 9 | :data-align=\\ center\\ #### Wide Table (centered) scroll enabled when page is narrow | Fruits | num (left align) | num (right align) | num | num | num | | ------ | :--------------- | ----------------: | ---- | ---- | ---- | | Apple | 1111 | 1111 | 2222 | 3333 | 4444 | | Banana | 111 | 111 | 222 | 333 | 444 | | Orange | 11 | 11 | 22 | 33 | 44 | | Lemon | 1 | 1 | 2 | 3 | 4 | :data-align=\\ center\\ #### Wider Table scroll enabled when page is narrow | Fruits | num (left align) | num (right align) | num | num | num | num | num | num | | ------ | :--------------- | ----------------: | ---- | ---- | ---- | ---- | ---- | ---- | | Apple | 1111 | 1111 | 2222 | 3333 | 4444 | 5555 | 6666 | 7777 | | Banana | 111 | 111 | 222 | 333 | 444 | 555 | 666 | 777 | | Orange | 11 | 11 | 22 | 33 | 44 | 55 | 66 | 77 | | Lemon | 1 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | ### Code #### Quote ```python for i in range(5 10): print(i) ``` type id_picture project_name Example Project project_excerpt Picture img :project2_thumb.jpg img_title img title2 date 2021-04-23 post # Title This is project content. !Image(:project2_thumb.jpg) type id_quote project_name Example Project project_excerpt William Shakespeare date 2021-05-27 post Let me not to the marriage of true minds Admit impediments. Love is not love Which alters when it alteration finds Or bends with the remover to remove. O no it is an ever-fixed mark That looks on tempests and is never shaken; It is the star to every wand'ring barque Whose worth's unknown although his height be taken. Love's not Time's fool though rosy lips and cheeks Within his bending sickle's compass come; Love alters not with his brief hours and weeks But bears it out even to the edge of doom. If this be error and upon me proved I never writ nor no man ever loved. type id_quote project_name Example Project project_excerpt Albert Einstein img :project2_thumb.jpg img_title img title4 date 2021-06-08 post Two things are infinite: the universe and human stupidity; and I'm not sure about the universe. type id_quote project_name Example Project project_excerpt Mae West img :project1_thumb.jpg img_title img title5 date 2021-08-20 post You only live once but if you do it right once is enough. type id_quote project_name Example Project project_excerpt Mahatma Gandhi img :project2_thumb.jpg img_title img title6 date 2021-12-20 post Be the change that you wish to see in the world." },{ "title" : "Links" ,"category" : "" ,"tags" : "" ,"url" : "/tabs/links.html" ,"date" : "Mar 11, 2023" ,"content" : "main header Links info Your Links page description. category title JekyII / Liquid type id_jekyiiliquid color gray title Web Design type id_webdesign color #F4A273 title Programming type id_programming color #62b462 list nil type id_programming title Stack OverFlow url https://stackoverflow.com/ info Stack Overflow is a question and answer website for professional and enthusiastic programmers. type id_jekyiiliquid title Jekyll url https://jekyllrb.com/ info Transform your plain text into static websites and blogs. type id_jekyiiliquid title Jekyll Cheat Sheet url https://cloudcannon.com/community/jekyll-cheat-sheet/ info There are so many Jekyll variables and filters to remember and it can be tricky to keep it all in your head. This cheat sheet serves as a quick reference of everything Jekyll can do. type id_jekyiiliquid title Liquid for Designers url https://github.com/Shopify/liquid/wiki/Liquid-for-Designers info Liquid for Designers wiki on GitHub type id_jekyiiliquid title Liquid for Programmers url https://github.com/Shopify/liquid/wiki/Liquid-for-Programmers info Liquid for Programmers wiki on GitHub type id_jekyiiliquid title Liquid Reference url https://shopify.dev/api/liquid/ info Liquid is a template language created by Shopify and written in Ruby. It is now available as an open source project on GitHub type id_webdesign title W3Schools url https://www.w3schools.com/ info W3Schools offers free online tutorials references and exercises in all the major languages of the web. Covering popular subjects like HTML CSS JavaScript Python SQL Java and many more." },{ "title" : "Welcome" ,"category" : "" ,"tags" : "" ,"url" : "/" ,"date" : "Mar 11, 2023" ,"content" : "Website is under Maintenance PLEASE VISIT AGAIN LATER" },{ "title" : "About" ,"category" : "" ,"tags" : "" ,"url" : "/tabs/about.html" ,"date" : "Mar 11, 2023" ,"content" : "Hello Sample Sample Sample Sample Sample" } ]
